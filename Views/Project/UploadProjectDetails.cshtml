@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Upload Project Details";
    var auditList = ViewBag.AuditList as List<SelectListItem>;
}
@if (TempData["UploadMessage"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["UploadMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2>Upload Project Details Excel</h2>

<form id="uploadForm" asp-controller="Project" asp-action="UploadProjectDetails" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="AuditID">Select Audit ID:</label>
        @Html.DropDownList("AuditID", auditList, "-- Select Audit ID --", new { @class = "form-control", required = "required", id = "AuditID" })
    </div>

    <div class="form-group mt-2">
        <label for="Project">Select Project Name:</label>
        @Html.DropDownList("Project", new List<SelectListItem>(), "-- Select Project Name --", new { @class = "form-control", required = "required", id = "Project" })
    </div>

    <div class="form-group mt-2">
        <label for="file">Select Excel file:</label>
        <input type="file" name="file" id="file" class="form-control" accept=".xlsx, .xls" required />
    </div>

    <div class="mt-3">
        <button type="button" class="btn btn-success" onclick="checkAuditAndUpload()">Upload and View</button>
    </div>
</form>

<div id="message" class="mt-3"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        // Bind Project dropdown when Audit ID changes
        $('#AuditID').change(function () {
            const auditId = $(this).val();
            const $projectSelect = $('#Project');

            $projectSelect.empty().append($('<option>', {
                value: '',
                text: '-- Loading Projects --'
            }));

            if (auditId) {
                $.getJSON('/Project/GetProjectsByAuditId', { auditId: auditId }, function (data) {
                    $projectSelect.empty().append($('<option>', {
                        value: '',
                        text: '-- Select Project Name --'
                    }));

                    $.each(data, function (i, item) {
                        $projectSelect.append($('<option>', {
                            value: item.value,
                            text: item.text
                        }));
                    });
                });
            } else {
                $projectSelect.empty().append($('<option>', {
                    value: '',
                    text: '-- Select Project Name --'
                }));
            }
        });

        async function checkAuditAndUpload() {
            const auditSelect = document.getElementById("AuditID");
            const projectSelect = document.getElementById("Project");
            const fileInput = document.getElementById("file");

            const selectedAuditId = auditSelect.value;
            const selectedProject = projectSelect.value;

            if (!selectedAuditId) {
                alert("Please select an Audit ID.");
                return;
            }

            if (!selectedProject) {
                alert("Please select a Project Name.");
                return;
            }

            try {
                const response = await fetch(`/Project/CheckAuditProjectExists?auditId=${encodeURIComponent(selectedAuditId)}&projectName=${encodeURIComponent(selectedProject)}`);
                const data = await response.json();

                if (data.exists) {
                    window.location.href = `/project/view/${encodeURIComponent(selectedAuditId)}/${encodeURIComponent(selectedProject)}`;
                } else {
                    if (!fileInput || !fileInput.files.length) {
                        alert("Audit/Project does not exist. Please select a file to upload.");
                        fileInput.focus();
                        return;
                    }

                    const formData = new FormData();
                    formData.append("file", fileInput.files[0]);
                    formData.append("AuditID", selectedAuditId);
                    formData.append("Project", selectedProject);

                    const uploadResponse = await fetch('@Url.Action("UploadProjectDetails", "Project")', {
                        method: "POST",
                        body: formData
                    });

                    if (!uploadResponse.ok) {
                        const errorText = await uploadResponse.text();
                        console.log(errorText);
                        alert("File upload failed: " + errorText);
                        return;
                    }

                    const result = await uploadResponse.json();
                    if (result.success) {
                        window.location.href = `/project/view/${encodeURIComponent(result.auditId)}/${encodeURIComponent(result.project)}`;
                    } else {
                        alert("Upload failed: " + result.error);
                    }
                }
            } catch (error) {
                console.error("Error:", error);
                alert("An error occurred. Please try again.");
            }
        }
    </script>
}
